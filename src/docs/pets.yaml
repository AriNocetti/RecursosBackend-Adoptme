paths:
  /api/pets:
    get:
      tags:
        - Pets
      summary: Obtiene la lista de todas las mascotas
      description: Retorna un listado de todas las mascotas registradas en el sistema
      operationId: getAllPets
      responses:
        '200':
          description: Lista de mascotas obtenida correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetsListResponse'
              example:
                status: "success"
                payload: [
                  {
                    _id: "60d0fe4f5311236168a109ca",
                    name: "Puchini",
                    specie: "Perro",
                    birthDate: "2021-01-15T00:00:00.000Z",
                    adopted: false,
                    owner: null,
                    image: "/img/pets/puchini.jpg"
                  },
                  {
                    _id: "60d0fe4f5311236168a109cb",
                    name: "Firulais",
                    specie: "Perro",
                    birthDate: "2020-03-10T00:00:00.000Z",
                    adopted: true,
                    owner: "60d0fe4f5311236168a109cc",
                    image: "/img/pets/firulais.jpg"
                  }
                ]
        '500':
          $ref: '#/components/responses/ServerError'
    
    post:
      tags:
        - Pets
      summary: Crea una nueva mascota
      description: Registra una nueva mascota en el sistema con la información básica
      operationId: createPet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetInput'
            example:
              name: "Puchini"
              specie: "Perro"
              birthDate: "2021-01-15T00:00:00.000Z"
      responses:
        '200':
          description: La mascota fue creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
              example:
                status: "success"
                payload:
                  _id: "60d0fe4f5311236168a109ca"
                  name: "Puchini"
                  specie: "Perro"
                  birthDate: "2021-01-15T00:00:00.000Z"
                  adopted: false
                  owner: null
                  image: null
        '400':
          description: Valores incompletos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: "error"
                error: "Incomplete values"
        '500':
          $ref: '#/components/responses/ServerError'
  
  /api/pets/{pid}:
    put:
      tags:
        - Pets
      summary: Actualiza una mascota por ID
      description: Modifica la información de una mascota existente identificada por su ID
      operationId: updatePet
      parameters:
        - name: pid
          in: path
          description: ID de la mascota a actualizar
          required: true
          schema:
            type: string
            format: ObjectId
          example: "60d0fe4f5311236168a109ca"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetUpdate'
            example:
              name: "Puchini Actualizado"
              specie: "Perro"
              adopted: true
              owner: "60d0fe4f5311236168a109cc"
      responses:
        '200':
          description: Mascota actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                status: "success"
                message: "pet updated"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    
    delete:
      tags:
        - Pets
      summary: Elimina una mascota por ID
      description: Elimina permanentemente una mascota del sistema
      operationId: deletePet
      parameters:
        - name: pid
          in: path
          description: ID de la mascota a eliminar
          required: true
          schema:
            type: string
            format: ObjectId
          example: "60d0fe4f5311236168a109ca"
      responses:
        '200':
          description: Mascota eliminada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
              example:
                status: "success"
                message: "pet deleted"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/pets/withimage:
    post:
      tags:
        - Pets
      summary: Crea una nueva mascota con imagen
      description: Registra una nueva mascota en el sistema incluyendo una imagen
      operationId: createPetWithImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PetWithImageInput'
      responses:
        '200':
          description: La mascota con imagen fue creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
              example:
                status: "success"
                payload:
                  _id: "60d0fe4f5311236168a109ca"
                  name: "Puchini"
                  specie: "Perro"
                  birthDate: "2021-01-15T00:00:00.000Z"
                  adopted: false
                  owner: null
                  image: "/img/pets/puchini.jpg"
        '400':
          description: Valores incompletos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: "error"
                error: "Incomplete values"
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    Pet:
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
          description: ID autogenerado de la mascota
          example: "60d0fe4f5311236168a109ca"
        name:
          type: string
          description: Nombre de la mascota
          example: "Puchini"
        specie:
          type: string
          description: Especie de la mascota
          example: "Perro"
        birthDate:
          type: string
          format: date-time
          description: Fecha de nacimiento de la mascota
          example: "2021-01-15T00:00:00.000Z"
        adopted:
          type: boolean
          description: Indica si la mascota ha sido adoptada
          default: false
          example: false
        owner:
          type: string
          format: ObjectId
          description: ID del usuario dueño de la mascota (referencia a Users)
          nullable: true
          example: null
        image:
          type: string
          description: Ruta de la imagen de la mascota
          nullable: true
          example: "/img/pets/puchini.jpg"
      required:
        - name
        - specie
    
    PetInput:
      type: object
      properties:
        name:
          type: string
          description: Nombre de la mascota
          example: "Puchini"
        specie:
          type: string
          description: Especie de la mascota
          example: "Perro"
        birthDate:
          type: string
          format: date-time
          description: Fecha de nacimiento de la mascota
          example: "2021-01-15T00:00:00.000Z"
      required:
        - name
        - specie
        - birthDate
    
    PetUpdate:
      type: object
      properties:
        name:
          type: string
          description: Nombre de la mascota
          example: "Puchini Actualizado"
        specie:
          type: string
          description: Especie de la mascota
          example: "Perro"
        birthDate:
          type: string
          format: date-time
          description: Fecha de nacimiento de la mascota
          example: "2021-01-15T00:00:00.000Z"
        adopted:
          type: boolean
          description: Estado de adopción de la mascota
          example: true
        owner:
          type: string
          format: ObjectId
          description: ID del usuario dueño
          example: "60d0fe4f5311236168a109cc"
    
    PetWithImageInput:
      type: object
      properties:
        name:
          type: string
          description: Nombre de la mascota
          example: "Puchini"
        specie:
          type: string
          description: Especie de la mascota
          example: "Perro"
        birthDate:
          type: string
          format: date-time
          description: Fecha de nacimiento de la mascota
          example: "2021-01-15T00:00:00.000Z"
        image:
          type: string
          format: binary
          description: Imagen de la mascota
      required:
        - name
        - specie
        - birthDate
    
    PetsListResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["success"]
          description: Estado de la respuesta
          example: "success"
        payload:
          type: array
          description: Lista de mascotas
          items:
            $ref: '#/components/schemas/Pet'
      required:
        - status
        - payload
    
    PetResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["success"]
          description: Estado de la respuesta
          example: "success"
        payload:
          $ref: '#/components/schemas/Pet'
      required:
        - status
        - payload
    
    SuccessMessage:
      type: object
      properties:
        status:
          type: string
          enum: ["success"]
          description: Estado de la respuesta
          example: "success"
        message:
          type: string
          description: Mensaje descriptivo del resultado
          example: "pet updated"
      required:
        - status
        - message